// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	types "github.com/Mellanox/nic-configuration-operator/pkg/types"
)

// NVConfigUtils is an autogenerated mock type for the NVConfigUtils type
type NVConfigUtils struct {
	mock.Mock
}

// QueryNvConfig provides a mock function with given fields: ctx, pciAddr, additionalParameter
func (_m *NVConfigUtils) QueryNvConfig(ctx context.Context, pciAddr string, additionalParameter string) (types.NvConfigQuery, error) {
	ret := _m.Called(ctx, pciAddr, additionalParameter)

	if len(ret) == 0 {
		panic("no return value specified for QueryNvConfig")
	}

	var r0 types.NvConfigQuery
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (types.NvConfigQuery, error)); ok {
		return rf(ctx, pciAddr, additionalParameter)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) types.NvConfigQuery); ok {
		r0 = rf(ctx, pciAddr, additionalParameter)
	} else {
		r0 = ret.Get(0).(types.NvConfigQuery)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, pciAddr, additionalParameter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResetNvConfig provides a mock function with given fields: pciAddr
func (_m *NVConfigUtils) ResetNvConfig(pciAddr string) error {
	ret := _m.Called(pciAddr)

	if len(ret) == 0 {
		panic("no return value specified for ResetNvConfig")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(pciAddr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetNvConfigParameter provides a mock function with given fields: pciAddr, paramName, paramValue
func (_m *NVConfigUtils) SetNvConfigParameter(pciAddr string, paramName string, paramValue string) error {
	ret := _m.Called(pciAddr, paramName, paramValue)

	if len(ret) == 0 {
		panic("no return value specified for SetNvConfigParameter")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string) error); ok {
		r0 = rf(pciAddr, paramName, paramValue)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewNVConfigUtils creates a new instance of NVConfigUtils. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNVConfigUtils(t interface {
	mock.TestingT
	Cleanup(func())
}) *NVConfigUtils {
	mock := &NVConfigUtils{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
